
enrich.api.endpoint=https://dsi-demo.ait.ac.at/enrichment-web

# MongoDB configuration (main db)
#enrich.mongodb.connectionUri=mongodb://localhost:27017
#enrich.mongodb.connectionUri=mongodb://<ip_of_the_test_server>:27017
enrich.mongodb.connectionUri=mongodb://<ip_of_the_database_server>:27017
enrich.mongodb.database=enrichment
#enrich.mongodb.database=keywords
#enrich.mongodb.database=enrichment_test
enrich.mongodb.truststore=
enrich.mongodb.truststorepass=

# Named entity recognition and classification section
# NER Stanford classifier configuration
enrich.ner.stanford.model=classifiers/stanford/english.all.3class.distsim.crf.ser.gz
enrich.ner.stanford.url=http://<ip_of_the_test_server>:9090/stanford/en/namedEntityRecognition

#C:\Users\katicd\Documents\Europeana\Code\Ait\Enrichment_workspace\enrichment\enrichment-ner\src\main\resources\classifiers\stanford\english.all.3class.distsim.crf.ser.gz
# NER Python configuration
enrich.ner.python.path=C:\\Users\\katicd\\Documents\\Europeana\\Code\\Ait\\Code\\AIT\\venv64\\Scripts\\python.exe
enrich.ner.python.script=python/main.py
# NER python spaCy NLP model
enrich.ner.python.spacy.model=C:\\Users\\katicd\\Documents\\Europeana\\Code\\Ait\\Code\\AIT\\venv\\Lib\\site-packages\\en_core_web_sm\\en_core_web_sm-2.0.0
# NER DBpedia spotlight configuration
# Additional: 
#	Docker command: docker pull dbpedia/spotlight-english
#	Docker command: docker run --name spotlight -p 2222:80 -it dbpedia/spotlight-english spotlight.sh
enrich.ner.dbpedia.baseUrl=http://<ip_of_the_test_server>:9090/dbpedia/en/rest/annotate

# Named entity linking section
enrich.ner.linking.europeana.apikey=apidemo

# Translation
# Translation Google configuration
#enrich.translation.google.credentials=C:\\Users\\katicd\\Documents\\Europeana\\Code\\Ait\\additional_data\\EU-Europeana-enrichment-d92edee4115a.json
#enrich.translation.google.credentials=/home/denis/config/enricheuropeana-3df22ae9c69d.json
enrich.translation.google.credentials=/home/ait/enrich/translation-credentials/enricheuropeana-3df22ae9c69d.json
enrich.translation.google.waittime=2
# Translation eTranslation configuration
#enrich.translation.eTranslation.credentials=/home/denis/config/eTranslation.txt
enrich.translation.eTranslation.credentials=/home/ait/enrich/translation-credentials/eTranslation.txt
# 	eTranslation domain could be "SPD" (for neural and speed-optimized statistical engines on the cloud. This is the default.) else "Europeana"
enrich.translation.eTranslation.domain=SPD
enrich.translation.eTranslation.requesterCallback=http://dsi-demo2.ait.ac.at/enrichment-web-test/administration/receiveETranslation
enrich.translation.eTranslation.baseUrl.local=http://dsi-demo2.ait.ac.at/enrichment-web-test/administration/eTranslation
#enrich.translation.eTranslation.requesterCallback=http://192.168.43.116:8080/administration/receiveETranslation
enrich.translation.eTranslation.errorCallback=
enrich.translation.eTranslation.emailDestination=srdjan.stevanetic@ait.ac.at
enrich.translation.deepl-free.baseUrl=https://api-free.deepl.com/v2/translate
enrich.translation.deepl-free.authenticationKey=/home/ait/enrich/translation-credentials/deeplAuthentication.txt

#enrich.solr.translated.entities=http://localhost:8983/solr/solr-enrichment
#solr.entity-positions.url = http://localhost:8983/solr
solr.entity-positions.url = http://<ip_of_the_database_server>:8983/solr
solr.entity-positions.timeout = 60000
solr.facetLimit=750
#enrich.solr.translated.entities=C:/java/entitiesRomanian.txt
enrich.solr.translated.entities=
solr.wikidata-search.baseUrl=https://<domain_name_of_production_server>/enrichment-web/enrichment/search
#solr.wikidata-search.baseUrl=http://<ip_of_the_test_server>:8080/enrichment-web-test/enrichment/search

# test case
enrich.web.book.dumitru=
enrich.web.book.dumitru.original=
enrich.web.book.dumitru.output=
enrich.web.book.dumitru.output.formatted.translatedText.pdf=
enrich.web.book.dumitru.output.formatted.originalText.pdf=
enrich.stories.import=C:\\Users\\katicd\\Documents\\Europeana\\Code\\Ait\\additional_data\\StoriesExport.json
enrich.items.import=C:\\Users\\katicd\\Documents\\Europeana\\Code\\Ait\\additional_data\\ItemsExport.json

# saving Wikidata info into files
#enrich.wikidata.directory = C:/wikidata
#enrich.wikidata.directory = /home/srdjan/wikidata
enrich.directory = /home/ait/enrich/
enrich.wikidata.json.base.url=https://www.wikidata.org/wiki/Special:EntityData/

transcribathon.base.url.stories=https://europeana.fresenia.man.poznan.pl/tp-api/stories/
transcribathon.base.url.stories.minimal=https://europeana.fresenia.man.poznan.pl/tp-api/storiesMinimal/
transcribathon.base.url.items=https://europeana.fresenia.man.poznan.pl/tp-api/items/

enrich.annotations.id.base.url=http://dsi-demo.ait.ac.at/enrichment-web/enrichment/annotation/
enrich.annotations.target.items.base.url=https://europeana.transcribathon.eu/documents/story/item/?
enrich.annotations.target.stories.base.url=https://europeana.transcribathon.eu/documents/story/?
enrich.annotations.creator=https://pro.europeana.eu/project/enrich-europeana

search.api.base.url=https://api.europeana.eu/record/v2/search.json

###enrich.wikidata.subclasses.geographic-location=/home/ait/enrich/wikidata-types/Q2221906-geographic-location-subclasses.json
###enrich.wikidata.subclasses.geographic-location.remove=/home/ait/enrich/wikidata-types/Q2221906-types-to-exclude.json
###enrich.wikidata.subclasses.human=/home/ait/enrich/wikidata-types/Q5-human-subclasses.json
enrich.wikidata.subclasses.geographic-location=/wikidata-types/Q2221906-geographic-location-subclasses.json
enrich.wikidata.subclasses.geographic-location.remove=/wikidata-types/Q2221906-types-to-exclude.json
enrich.wikidata.subclasses.human=/wikidata-types/Q5-human-subclasses.json

#string value representing the key used for JWT signature verification 
europeana.apikey.jwttoken.signaturekey=-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgq2lkW7yOWM1mEIyE3zvJxHoRX6S9U8GJp3leNent2E7CXffk45clrpA2ElzH7OAWEoKEth+ORlHAeyAls4eqTyjimXv4HRVTxxL9PCrQDqsd9oVKXnQPbLYxaMRN9xLF2THBYVNJv7Bz1DT3CL+DAq9f5W9N0X+Nsik2+IE8IUDLWyfY2COQrpfS3gTTzHyt7BFDUbzvOuLs6jRuA2rFyYv1i8dN6vdX7WiamrLyTBLOLNGWwCCuV4qLdhbKMUl7S3jOkPg7WHy+lfkWmWAdeSP9wPTDnSJXpCIb+dbYUW6mhlbLNfQLksjxDAqLCE8MgMD6n/CJgVvf26GhlRxWQIDAQAB-----END PUBLIC KEY-----
# Resource name embedded in JWT token
authorization.api.name=entities
# Useful for local development. If false, unauthenticated read/write requests can be sent to API
auth.read.enabled=true
auth.write.enabled=true
europeana.apikey.serviceurl=https://apikey.eanadev.org/apikey

#spark.topic.detection.serviceurl=http://<ip_of_the_spark_master>:8181/spark-topic-detection
#spark.language.detection.serviceurl=http://<ip_of_the_spark_master>:8181/spark-language-detection
spark.topic.detection.serviceurl=http://<ip_of_the_test_server>:8181/spark-topic-detection
spark.language.detection.serviceurl=http://<ip_of_the_test_server>:8181/spark-language-detection
